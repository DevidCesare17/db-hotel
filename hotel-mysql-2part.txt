GROUP BY

1. Conta gli ospiti raggruppandoli per anno di nascita

SELECT COUNT(`id`), YEAR(`date_of_birth`)
FROM `ospiti`
GROUP BY YEAR(`date_of_birth`);

|1|1922
|1|1924
|2|1926
|1|1930
|1|1947
|1|1951
|1|1952
|2|1953
|1|1955
|1|1957
|1|1959
|1|1960
|1|1964
|1|1975
|1|1977
|1|1982
|1|1983
|1|1988
|1|1992
|1|1993
|2|2000
|1|2001
|1|2002
|1|2003
|1|2005
|1|2008
|1|2010


2. Somma i prezzi dei pagamenti raggruppandoli per status

SELECT SUM(price), `status`
FROM `pagamenti`
GROUP BY `status`;

|4164.00|accepted
|8233.00|pending
|2136.00|rejected


3. Conta quante volte è stata prenotata ogni stanza

SELECT COUNT(id), `stanza_id`
FROM `prenotazioni`
GROUP BY `stanza_id`;

|num|stanza
|1  |1
|1  |3
|3  |4
|1  |5
|2  |6
|1  |7
|2  |8
|2  |9
|5  |10
|3  |11
|1  |12
|3  |13
|2  |14
|3  |15


4. Fai una analisi per vedere se ci sono ore in cui le prenotazioni sono più frequenti

SELECT COUNT(id), HOUR(created_at)
FROM `prenotazioni`
GROUP BY HOUR(created_at)
ORDER BY COUNT(id) DESC;

|num|hour
|4  |3
|4  |21
|3  |22
|3  |23
|3  |7
|3  |11
|2  |2
|2  |12
|1  |8
|1  |13
|1  |1
|1  |6
|1  |10
|1  |5


5. Quante prenotazioni ha fatto l’ospite che ha fatto più prenotazioni?

SELECT COUNT(prenotazione_id), `ospite_id`
FROM `prenotazioni_has_ospiti`
GROUP BY `ospite_id`
ORDER BY COUNT(prenotazione_id) DESC LIMIT 1;

|num|id_osp
|3  |41



JOIN

1. Come si chiamano gli ospiti che hanno fatto più di due prenotazioni?

2. Stampare tutti gli ospiti per ogni prenotazione

3. Stampare Nome, Cognome, Prezzo e Pagante per tutte le prenotazioni fatte a Maggio 2018

4. Fai la somma di tutti i prezzi delle prenotazioni per le stanze del primo piano

5. Prendi i dati di fatturazione per la prenotazione con id=7

6. Le stanze sono state tutte prenotate almeno una volta? (Visualizzare le stanze non ancora prenotate)